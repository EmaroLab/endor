<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>endor: aonode.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../endor.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">endor
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">C++ library to create and navigate AND-OR graphs</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">aonode.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//===============================================================================//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Name         : aonode.cpp</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// Author(s)    : Barbara Bruno, Yeshasvi Tirupachuri V.S.</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Affiliation  : University of Genova, Italy - dept. DIBRIS</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// Description  : Generic node element of an AND-OR graph</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//===============================================================================//</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;aonode.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../db/dba/classHyperArc.xhtml#a6795bd9dad3250ccb3c62a7ee3968c7c">   14</a></span>&#160;<a class="code" href="../../db/dba/classHyperArc.xhtml#a6795bd9dad3250ccb3c62a7ee3968c7c">HyperArc::HyperArc</a>(<span class="keywordtype">int</span> index, vector&lt;AOnode*&gt; nodes, <span class="keywordtype">int</span> cost)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="../../db/dba/classHyperArc.xhtml#a511c35c08888523fca1c72330f4f8f15">hIndex</a> = index;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="../../db/dba/classHyperArc.xhtml#ab8998fd7ec93f857caa472bceed5479e">children</a> = nodes;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="../../db/dba/classHyperArc.xhtml#a237ad2fcfcc2a3be2db42a57dfdab9f2">hCost</a> = cost;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    </div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment">//DEBUG:printArcInfo();</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../db/dba/classHyperArc.xhtml#a39d955e131b47596e951c7d45ad4a819">   24</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dba/classHyperArc.xhtml#a39d955e131b47596e951c7d45ad4a819">HyperArc::printArcInfo</a>()</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Info of hyperarc: &quot;</span> &lt;&lt;<a class="code" href="../../db/dba/classHyperArc.xhtml#a511c35c08888523fca1c72330f4f8f15">hIndex</a> &lt;&lt;endl;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Hyperarc cost: &quot;</span> &lt;&lt;<a class="code" href="../../db/dba/classHyperArc.xhtml#a237ad2fcfcc2a3be2db42a57dfdab9f2">hCost</a> &lt;&lt;endl;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Child nodes: &quot;</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dba/classHyperArc.xhtml#ab8998fd7ec93f857caa472bceed5479e">children</a>.size(); i++)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        cout&lt;&lt;<a class="code" href="../../db/dba/classHyperArc.xhtml#ab8998fd7ec93f857caa472bceed5479e">children</a>[i]-&gt;nName &lt;&lt;<span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    cout&lt;&lt;endl;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../d6/d22/classAOnode.xhtml#ad316f714e374f30c1ce69fde03da5f96">   37</a></span>&#160;<a class="code" href="../../d6/d22/classAOnode.xhtml#ad316f714e374f30c1ce69fde03da5f96">AOnode::AOnode</a>(<span class="keywordtype">string</span> name, <span class="keywordtype">int</span> cost)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    nName = name;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    nCost = cost;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    nFeasible = <span class="keyword">false</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    nSolved = <span class="keyword">false</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">//DEBUG:printNodeInfo();</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d6/d22/classAOnode.xhtml#a572c1ba0baa9f0abf1290e142a1a3968">   51</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d22/classAOnode.xhtml#a572c1ba0baa9f0abf1290e142a1a3968">AOnode::addArc</a>(<span class="keywordtype">int</span> hyperarcIndex, vector&lt;AOnode*&gt; nodes, <span class="keywordtype">int</span> hyperarcCost)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// create the hyperarc</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="../../db/dba/classHyperArc.xhtml">HyperArc</a> toAdd(hyperarcIndex, nodes, hyperarcCost);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    </div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// add this node to the vector of parents of each child node</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)nodes.size(); i++)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        nodes[i]-&gt;parents.push_back(<span class="keyword">this</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    </div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// add it to the set of hyperarcs</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    arcs.push_back(toAdd);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d6/d22/classAOnode.xhtml#ad6b5e2941cba4d727bfc8319590d46cf">   65</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d22/classAOnode.xhtml#ad6b5e2941cba4d727bfc8319590d46cf">AOnode::printNodeInfo</a>()</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Info of node: &quot;</span> &lt;&lt;nName &lt;&lt;endl;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Node cost: &quot;</span> &lt;&lt;nCost &lt;&lt;endl;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Is feasible? &quot;</span> &lt;&lt;boolalpha &lt;&lt;nFeasible &lt;&lt;endl;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Is solved? &quot;</span> &lt;&lt;boolalpha &lt;&lt;nSolved &lt;&lt;endl;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Parent nodes: &quot;</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)parents.size(); i++)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        cout&lt;&lt;parents[i]-&gt;nName &lt;&lt;<span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    cout&lt;&lt;endl;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Number of hyperarcs: &quot;</span> &lt;&lt;arcs.size() &lt;&lt;endl;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)arcs.size(); i++)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        arcs[i].<a class="code" href="../../db/dba/classHyperArc.xhtml#a39d955e131b47596e951c7d45ad4a819">printArcInfo</a>();        </div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d6/d22/classAOnode.xhtml#aa8c56db8e9c590e64e944ac9a06bd45e">   81</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d22/classAOnode.xhtml#aa8c56db8e9c590e64e944ac9a06bd45e">AOnode::isFeasible</a>()</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">bool</span> temp_isFeasible = <span class="keyword">false</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    </div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// 1. the node is feasible if it is already feasible</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">if</span> (nFeasible == <span class="keyword">true</span>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        temp_isFeasible = <span class="keyword">true</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        </div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// 2. the node is feasible if it is a terminal node (no hyperarcs)</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span> (arcs.size() == 0)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        temp_isFeasible = <span class="keyword">true</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    </div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// 3. the node is feasible if it has &gt;=1 hyperarcs with all child nodes solved</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// iterate on the hyperarcs of the node</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;(int)arcs.size(); i++)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordtype">bool</span> allSolved = <span class="keyword">true</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            </div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">// iterate on the child nodes</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt;(int)arcs[i].<a class="code" href="../../db/dba/classHyperArc.xhtml#ab8998fd7ec93f857caa472bceed5479e">children</a>.size(); j++)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="comment">// if the node is not solved --&gt; break</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">if</span> (arcs[i].<a class="code" href="../../db/dba/classHyperArc.xhtml#ab8998fd7ec93f857caa472bceed5479e">children</a>[j]-&gt;nSolved == <span class="keyword">false</span>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                allSolved = <span class="keyword">false</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// if all the child nodes are solved, this node is feasible</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">if</span> (allSolved == <span class="keyword">true</span>)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            temp_isFeasible = <span class="keyword">true</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    </div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// set the feasibility property</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    nFeasible = temp_isFeasible;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">  123</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">AOnode::setSolved</a>()</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">// a node can be solved only if it&#39;s feasible</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span> (nFeasible == <span class="keyword">true</span>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        nSolved = <span class="keyword">true</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The node is not feasible. Are you sure it is solved?&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    </div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> nSolved;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="ttc" id="classHyperArc_xhtml"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml">HyperArc</a></div><div class="ttdoc">class &quot;HyperArc&quot; for the hyperarc connecting one parent node to a number of child nodes in an AND rel...</div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00020">aonode.h:20</a></div></div>
<div class="ttc" id="classAOnode_xhtml_aa8c56db8e9c590e64e944ac9a06bd45e"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#aa8c56db8e9c590e64e944ac9a06bd45e">AOnode::isFeasible</a></div><div class="ttdeci">void isFeasible()</div><div class="ttdoc">determine whether the node is feasible </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00081">aonode.cpp:81</a></div></div>
<div class="ttc" id="classAOnode_xhtml_ad6b5e2941cba4d727bfc8319590d46cf"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#ad6b5e2941cba4d727bfc8319590d46cf">AOnode::printNodeInfo</a></div><div class="ttdeci">void printNodeInfo()</div><div class="ttdoc">display node information </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00065">aonode.cpp:65</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a572c1ba0baa9f0abf1290e142a1a3968"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a572c1ba0baa9f0abf1290e142a1a3968">AOnode::addArc</a></div><div class="ttdeci">void addArc(int hyperarcIndex, vector&lt; AOnode * &gt; nodes, int hyperarcCost)</div><div class="ttdoc">add an hyperarc to child nodes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00051">aonode.cpp:51</a></div></div>
<div class="ttc" id="classAOnode_xhtml_ad316f714e374f30c1ce69fde03da5f96"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#ad316f714e374f30c1ce69fde03da5f96">AOnode::AOnode</a></div><div class="ttdeci">AOnode(string name, int cost)</div><div class="ttdoc">constructor </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00037">aonode.cpp:37</a></div></div>
<div class="ttc" id="classAOnode_xhtml_acf10113d7e2bdb01ca67e6bcf43fabf3"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">AOnode::setSolved</a></div><div class="ttdeci">bool setSolved()</div><div class="ttdoc">set the node as solved </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00123">aonode.cpp:123</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_ab8998fd7ec93f857caa472bceed5479e"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#ab8998fd7ec93f857caa472bceed5479e">HyperArc::children</a></div><div class="ttdeci">vector&lt; AOnode * &gt; children</div><div class="ttdoc">set of child nodes connected via the hyperarc </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00024">aonode.h:24</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_a6795bd9dad3250ccb3c62a7ee3968c7c"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#a6795bd9dad3250ccb3c62a7ee3968c7c">HyperArc::HyperArc</a></div><div class="ttdeci">HyperArc(int index, vector&lt; AOnode * &gt; nodes, int cost)</div><div class="ttdoc">constructor </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00014">aonode.cpp:14</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_a237ad2fcfcc2a3be2db42a57dfdab9f2"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#a237ad2fcfcc2a3be2db42a57dfdab9f2">HyperArc::hCost</a></div><div class="ttdeci">int hCost</div><div class="ttdoc">cost of the hyperarc </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00025">aonode.h:25</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_a39d955e131b47596e951c7d45ad4a819"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#a39d955e131b47596e951c7d45ad4a819">HyperArc::printArcInfo</a></div><div class="ttdeci">void printArcInfo()</div><div class="ttdoc">display hyperarc information </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00024">aonode.cpp:24</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_a511c35c08888523fca1c72330f4f8f15"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#a511c35c08888523fca1c72330f4f8f15">HyperArc::hIndex</a></div><div class="ttdeci">int hIndex</div><div class="ttdoc">index of the hyperarc </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00023">aonode.h:23</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri May 20 2016 10:06:11 for endor by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
