<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>endor: AOgraph Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../endor.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">endor
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">C++ library to create and navigate AND-OR graphs</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../d9/d18/classAOgraph-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">AOgraph Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>class "AOgraph" for the AND-OR graph  
 <a href="../../db/dbf/classAOgraph.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/df2/aograph_8h_source.xhtml">aograph.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Collaboration diagram for AOgraph:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../df/d9a/classAOgraph__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac5058c9153932169e618bb43e612dc35"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#ac5058c9153932169e618bb43e612dc35">AOgraph</a> (string name)</td></tr>
<tr class="memdesc:ac5058c9153932169e618bb43e612dc35"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor  <a href="#ac5058c9153932169e618bb43e612dc35">More...</a><br /></td></tr>
<tr class="separator:ac5058c9153932169e618bb43e612dc35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4047aad30065aaf5ebdb04b5ee4565e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#ae4047aad30065aaf5ebdb04b5ee4565e">loadFromFile</a> (string fileName)</td></tr>
<tr class="memdesc:ae4047aad30065aaf5ebdb04b5ee4565e"><td class="mdescLeft">&#160;</td><td class="mdescRight">load the graph description from a file  <a href="#ae4047aad30065aaf5ebdb04b5ee4565e">More...</a><br /></td></tr>
<tr class="separator:ae4047aad30065aaf5ebdb04b5ee4565e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a520284be02c834241d32d9669598fba1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a520284be02c834241d32d9669598fba1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a520284be02c834241d32d9669598fba1">printGraphInfo</a> ()</td></tr>
<tr class="memdesc:a520284be02c834241d32d9669598fba1"><td class="mdescLeft">&#160;</td><td class="mdescRight">display graph information <br /></td></tr>
<tr class="separator:a520284be02c834241d32d9669598fba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a577adb4ee85685e439922947709e83e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a577adb4ee85685e439922947709e83e7">suggestNext</a> (bool strategy)</td></tr>
<tr class="memdesc:a577adb4ee85685e439922947709e83e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">suggest the node to solve  <a href="#a577adb4ee85685e439922947709e83e7">More...</a><br /></td></tr>
<tr class="separator:a577adb4ee85685e439922947709e83e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3de5a6fa4472fac8eafbd1ba637c8bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#ac3de5a6fa4472fac8eafbd1ba637c8bd">solveByName</a> (string nameNode)</td></tr>
<tr class="memdesc:ac3de5a6fa4472fac8eafbd1ba637c8bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">solve a node, finding it by name  <a href="#ac3de5a6fa4472fac8eafbd1ba637c8bd">More...</a><br /></td></tr>
<tr class="separator:ac3de5a6fa4472fac8eafbd1ba637c8bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d24a046495d74b3a350566f5a48fcb0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0d24a046495d74b3a350566f5a48fcb0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a0d24a046495d74b3a350566f5a48fcb0">~AOgraph</a> ()</td></tr>
<tr class="memdesc:a0d24a046495d74b3a350566f5a48fcb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor <br /></td></tr>
<tr class="separator:a0d24a046495d74b3a350566f5a48fcb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a8c5dd2d57022d5e0e5f12c90f2b81027"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8c5dd2d57022d5e0e5f12c90f2b81027"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">gName</a></td></tr>
<tr class="memdesc:a8c5dd2d57022d5e0e5f12c90f2b81027"><td class="mdescLeft">&#160;</td><td class="mdescRight">name of the graph <br /></td></tr>
<tr class="separator:a8c5dd2d57022d5e0e5f12c90f2b81027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a15bd520a88dab17a2889577f0d8c6a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1a15bd520a88dab17a2889577f0d8c6a"></a>
vector&lt; <a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a></td></tr>
<tr class="memdesc:a1a15bd520a88dab17a2889577f0d8c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">set of nodes in the AND-OR graph <br /></td></tr>
<tr class="separator:a1a15bd520a88dab17a2889577f0d8c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b49c18c37014abdad084e1939fe2486"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b49c18c37014abdad084e1939fe2486"></a>
<a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a></td></tr>
<tr class="memdesc:a3b49c18c37014abdad084e1939fe2486"><td class="mdescLeft">&#160;</td><td class="mdescRight">pointer to the node = final assembly <br /></td></tr>
<tr class="separator:a3b49c18c37014abdad084e1939fe2486"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68db1975c2fefa3845e0604af379bbf6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a68db1975c2fefa3845e0604af379bbf6"></a>
vector&lt; <a class="el" href="../../db/dc7/classPath.xhtml">Path</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a></td></tr>
<tr class="memdesc:a68db1975c2fefa3845e0604af379bbf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">set of paths in the AND-OR graph <br /></td></tr>
<tr class="separator:a68db1975c2fefa3845e0604af379bbf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28bbee0711fbf8ad10d39e0b9e094155"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a28bbee0711fbf8ad10d39e0b9e094155"></a>
vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a></td></tr>
<tr class="memdesc:a28bbee0711fbf8ad10d39e0b9e094155"><td class="mdescLeft">&#160;</td><td class="mdescRight">indices of the updated paths <br /></td></tr>
<tr class="separator:a28bbee0711fbf8ad10d39e0b9e094155"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30bcb49edb592fa8c09846f8afff5c89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a30bcb49edb592fa8c09846f8afff5c89"></a>
vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a></td></tr>
<tr class="memdesc:a30bcb49edb592fa8c09846f8afff5c89"><td class="mdescLeft">&#160;</td><td class="mdescRight">costs subtracted to the updated paths <br /></td></tr>
<tr class="separator:a30bcb49edb592fa8c09846f8afff5c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a032ca4643c87641235d59506090a53d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">addNode</a> (string nameNode, int cost)</td></tr>
<tr class="memdesc:a032ca4643c87641235d59506090a53d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a node in the graph  <a href="#a032ca4643c87641235d59506090a53d1">More...</a><br /></td></tr>
<tr class="separator:a032ca4643c87641235d59506090a53d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8437faadc195ca2835e41c384777d061"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a> (string nameNode)</td></tr>
<tr class="memdesc:a8437faadc195ca2835e41c384777d061"><td class="mdescLeft">&#160;</td><td class="mdescRight">find a node by name  <a href="#a8437faadc195ca2835e41c384777d061">More...</a><br /></td></tr>
<tr class="separator:a8437faadc195ca2835e41c384777d061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5be6664955f2ae86ffe5b560aaac379"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa5be6664955f2ae86ffe5b560aaac379"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">updateNodeFeasibility</a> ()</td></tr>
<tr class="memdesc:aa5be6664955f2ae86ffe5b560aaac379"><td class="mdescLeft">&#160;</td><td class="mdescRight">update the feasibility status of the nodes in the graph <br /></td></tr>
<tr class="separator:aa5be6664955f2ae86ffe5b560aaac379"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa569c01b00233f8668e93da2a8d04bf8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">computeAddCost</a> (<a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;node, int hIndex)</td></tr>
<tr class="memdesc:aa569c01b00233f8668e93da2a8d04bf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">compute the cost to add to a path  <a href="#aa569c01b00233f8668e93da2a8d04bf8">More...</a><br /></td></tr>
<tr class="separator:aa569c01b00233f8668e93da2a8d04bf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f3218c510dcb87bfb9c2341ebfe574"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a08f3218c510dcb87bfb9c2341ebfe574"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a08f3218c510dcb87bfb9c2341ebfe574">generatePaths</a> ()</td></tr>
<tr class="memdesc:a08f3218c510dcb87bfb9c2341ebfe574"><td class="mdescLeft">&#160;</td><td class="mdescRight">generate all possible paths navigating the graph <br /></td></tr>
<tr class="separator:a08f3218c510dcb87bfb9c2341ebfe574"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87dafa2fe301e4f95a1ec66c6d7ba21a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a87dafa2fe301e4f95a1ec66c6d7ba21a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a87dafa2fe301e4f95a1ec66c6d7ba21a">setupGraph</a> ()</td></tr>
<tr class="memdesc:a87dafa2fe301e4f95a1ec66c6d7ba21a"><td class="mdescLeft">&#160;</td><td class="mdescRight">set up a graph <br /></td></tr>
<tr class="separator:a87dafa2fe301e4f95a1ec66c6d7ba21a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbea61dddb7e972e3b1c5add443df508"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#abbea61dddb7e972e3b1c5add443df508">findHyperarc</a> (<a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;parent, <a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;child)</td></tr>
<tr class="memdesc:abbea61dddb7e972e3b1c5add443df508"><td class="mdescLeft">&#160;</td><td class="mdescRight">find the index of the hyperarc connecting a parent to a child node  <a href="#abbea61dddb7e972e3b1c5add443df508">More...</a><br /></td></tr>
<tr class="separator:abbea61dddb7e972e3b1c5add443df508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa04f592cb029679028716e51249f38b2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">computeOverallUpdate</a> (<a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;node)</td></tr>
<tr class="memdesc:aa04f592cb029679028716e51249f38b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">compute the overall update cost (intermediate step to update the path cost)  <a href="#aa04f592cb029679028716e51249f38b2">More...</a><br /></td></tr>
<tr class="separator:aa04f592cb029679028716e51249f38b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f06eddccf019609014ed8bcfa4e3131"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">updatePaths</a> (<a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;solved)</td></tr>
<tr class="memdesc:a7f06eddccf019609014ed8bcfa4e3131"><td class="mdescLeft">&#160;</td><td class="mdescRight">update all paths (update path costs when a node is solved)  <a href="#a7f06eddccf019609014ed8bcfa4e3131">More...</a><br /></td></tr>
<tr class="separator:a7f06eddccf019609014ed8bcfa4e3131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad27f163e8b9ca4aeba1353ef1783d95a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">findOptimalPath</a> ()</td></tr>
<tr class="memdesc:ad27f163e8b9ca4aeba1353ef1783d95a"><td class="mdescLeft">&#160;</td><td class="mdescRight">find the optimal path (long-sighted strategy)  <a href="#ad27f163e8b9ca4aeba1353ef1783d95a">More...</a><br /></td></tr>
<tr class="separator:ad27f163e8b9ca4aeba1353ef1783d95a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="../../de/df2/aograph_8h_source.xhtml#l00053">53</a> of file <a class="el" href="../../de/df2/aograph_8h_source.xhtml">aograph.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac5058c9153932169e618bb43e612dc35"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">AOgraph::AOgraph </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>constructor of class <a class="el" href="../../db/dbf/classAOgraph.xhtml" title="class &quot;AOgraph&quot; for the AND-OR graph ">AOgraph</a> </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>name of the graph </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00450">450</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;{</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">gName</a> = name;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a> = NULL;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    </div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="comment">//DEBUG:printGraphInfo();</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_a8c5dd2d57022d5e0e5f12c90f2b81027"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">AOgraph::gName</a></div><div class="ttdeci">string gName</div><div class="ttdoc">name of the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00089">aograph.h:89</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a3b49c18c37014abdad084e1939fe2486"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">AOgraph::head</a></div><div class="ttdeci">AOnode * head</div><div class="ttdoc">pointer to the node = final assembly </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00091">aograph.h:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a032ca4643c87641235d59506090a53d1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AOgraph::addNode </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>nameNode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cost</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>add a node in the graph </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nameNode</td><td>name of the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cost</td><td>generic node cost </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// create the node</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> toAdd(nameNode, cost);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    </div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// add it to the set of nodes in the graph</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.push_back(toAdd);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="ttc" id="classAOnode_xhtml"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml">AOnode</a></div><div class="ttdoc">class &quot;AOnode&quot; for the generic node element of an AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00040">aonode.h:40</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a1a15bd520a88dab17a2889577f0d8c6a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">AOgraph::graph</a></div><div class="ttdeci">vector&lt; AOnode &gt; graph</div><div class="ttdoc">set of nodes in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00090">aograph.h:90</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa569c01b00233f8668e93da2a8d04bf8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int AOgraph::computeAddCost </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>hIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>compute the cost to add to a path </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>reference to the node to use for cost computation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hIndex</td><td>index of the node's hyperarc to use for cost computation </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cost to add to a path </dd></dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00155">155</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00047">AOnode::arcs</a>, <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00044">AOnode::nCost</a>, and <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00043">AOnode::nName</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// 1. the cost is to be ADDED to the cost of the path</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// 2. cost = node.nCost + node.arcs[hIndex].hCost</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">int</span> cost = 0;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    </div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">// raise an error if the hyperarc index is out of bounds</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">if</span> (hIndex &gt;= (<span class="keywordtype">int</span>)node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size())</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The node has only &quot;</span> &lt;&lt;node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size() &lt;&lt;<span class="stringliteral">&quot; hyperarcs.&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Hyperarc index &quot;</span> &lt;&lt;hIndex &lt;&lt;<span class="stringliteral">&quot; does not exist.&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        </div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// if hIndex == -1, the node is terminal</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">if</span> (hIndex == -1)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        cost = node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">nCost</a>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="comment">// otherwise, the cost to add is given by node.cost and hyperarc.cost</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        cost = node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">nCost</a> + node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[hIndex].hCost;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            </div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Node: &quot;</span> &lt;&lt;node.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a> &lt;&lt;<span class="stringliteral">&quot; - Cost: &quot;</span> &lt;&lt;cost &lt;&lt;endl;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> cost;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="ttc" id="classAOnode_xhtml_af28c48c20f4bc2cdc0d297d87c8bbe53"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">AOnode::nName</a></div><div class="ttdeci">string nName</div><div class="ttdoc">name of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00043">aonode.h:43</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a8c739f761ad7badefb9fa1b6fa946cc2"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">AOnode::arcs</a></div><div class="ttdeci">vector&lt; HyperArc &gt; arcs</div><div class="ttdoc">hyperarcs connecting the node to child nodes </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00047">aonode.h:47</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a5c0cc92fac735168be8111fae12af690"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">AOnode::nCost</a></div><div class="ttdeci">int nCost</div><div class="ttdoc">cost of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00044">aonode.h:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa04f592cb029679028716e51249f38b2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int AOgraph::computeOverallUpdate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>compute the overall update cost (intermediate step to update the path cost) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>reference to the node to use for cost computation </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>overall update cost (to subtract from the path cost) </dd></dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00048">AOnode::parents</a>.</p>
<div class="fragment"><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;{    </div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="comment">// 1. the cost is to be SUBTRACTED from the cost of the path</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="comment">// 2. the cost is computed as:</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="comment">// a. pathsCosts = set of the costs of the hyperarcs TO the current node</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="comment">// b. cost = max(pathsCosts)</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        </div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="comment">// N.B. the cost is to be subtracted from path[i] as:</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="comment">// 1. toSubtract = node.nCost + abs(pathsCosts[path_i] - cost);</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    </div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    vector&lt;int&gt; pathsCosts;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    </div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="comment">// for each parent node, find the cost of the hyperarc to the current node</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>.size(); i++)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordtype">int</span> hIndex = <a class="code" href="../../db/dbf/classAOgraph.xhtml#abbea61dddb7e972e3b1c5add443df508">findHyperarc</a>(*node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>[i], node);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="keywordflow">if</span> (hIndex != -1)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keywordtype">int</span> arcCost = node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>[i]-&gt;arcs[hIndex].hCost;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            pathsCosts.push_back(arcCost);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    }</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    </div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="comment">// find the maximum in pathsCosts</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordtype">int</span> cost = pathsCosts[0];</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=1; i&lt; (int)pathsCosts.size(); i++)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">if</span> (pathsCosts[i] &gt; cost)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            cost = pathsCosts[i];</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    </div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">return</span> cost;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_abbea61dddb7e972e3b1c5add443df508"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#abbea61dddb7e972e3b1c5add443df508">AOgraph::findHyperarc</a></div><div class="ttdeci">int findHyperarc(AOnode &amp;parent, AOnode &amp;child)</div><div class="ttdoc">find the index of the hyperarc connecting a parent to a child node </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00310">aograph.cpp:310</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a2a2ad8395675ca0a1e59fa35f781230e"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">AOnode::parents</a></div><div class="ttdeci">vector&lt; AOnode * &gt; parents</div><div class="ttdoc">nodes having this node as a child node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00048">aonode.h:48</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8437faadc195ca2835e41c384777d061"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> * AOgraph::findByName </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>nameNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>find a node by name </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nameNode</td><td>name of the node </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>pointer to the node with given name </dd></dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00124">124</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* temp = NULL;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    </div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size(); i++)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].nName == nameNode)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            temp = &amp;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i];</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    </div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// issue a warning if the node has not been found</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (temp == NULL)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[Warning] Name not found.&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Did you really look for &quot;</span> &lt;&lt;nameNode &lt;&lt;<span class="stringliteral">&quot;?&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> temp;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div><div class="ttc" id="classAOnode_xhtml"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml">AOnode</a></div><div class="ttdoc">class &quot;AOnode&quot; for the generic node element of an AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00040">aonode.h:40</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a1a15bd520a88dab17a2889577f0d8c6a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">AOgraph::graph</a></div><div class="ttdeci">vector&lt; AOnode &gt; graph</div><div class="ttdoc">set of nodes in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00090">aograph.h:90</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abbea61dddb7e972e3b1c5add443df508"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int AOgraph::findHyperarc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;&#160;</td>
          <td class="paramname"><em>child</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>find the index of the hyperarc connecting a parent to a child node </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">parent</td><td>reference to the parent node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">child</td><td>reference to the child node </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>index of the hyperarc connecting the parent to the child </dd></dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00310">310</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00047">AOnode::arcs</a>, and <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00043">AOnode::nName</a>.</p>
<div class="fragment"><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;{</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordtype">int</span> hIndex = -1;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    </div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt; (int)parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size(); j++)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k=0; k&lt; (int)parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[j].children.size(); k++)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span>(parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[j].children[k]-&gt;nName == child.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            {</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                hIndex = j;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            }</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    </div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="comment">// raise a warning if no hyperarc was found</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">if</span> (hIndex == -1)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[WARNING] There is no hyperarc connecting &quot;</span> &lt;&lt;parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            &lt;&lt;<span class="stringliteral">&quot; to &quot;</span> &lt;&lt;child.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a> &lt;&lt;<span class="stringliteral">&quot;.&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    </div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">return</span> hIndex;    </div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="ttc" id="classAOnode_xhtml_af28c48c20f4bc2cdc0d297d87c8bbe53"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">AOnode::nName</a></div><div class="ttdeci">string nName</div><div class="ttdoc">name of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00043">aonode.h:43</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a8c739f761ad7badefb9fa1b6fa946cc2"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">AOnode::arcs</a></div><div class="ttdeci">vector&lt; HyperArc &gt; arcs</div><div class="ttdoc">hyperarcs connecting the node to child nodes </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00047">aonode.h:47</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad27f163e8b9ca4aeba1353ef1783d95a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int AOgraph::findOptimalPath </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>find the optimal path (long-sighted strategy) </p><dl class="section return"><dt>Returns</dt><dd>index of the optimal path (minimum cost) </dd></dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00414">414</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../de/df2/aograph_8h_source.xhtml#l00023">Path::pComplete</a>, and <a class="el" href="../../de/df2/aograph_8h_source.xhtml#l00022">Path::pCost</a>.</p>
<div class="fragment"><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;{</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">// raise an error if there are no paths</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size() == 0)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    {</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] There are no paths navigating the graph. &quot;</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Did you run generatePaths()?&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    </div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keywordtype">int</span> index = 0;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="keywordtype">int</span> cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[0].pCost;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="comment">// raise an error if there are not-complete paths</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pComplete == <span class="keyword">false</span>)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        {</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The paths navigating the graph are not complete. &quot;</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                &lt;&lt;<span class="stringliteral">&quot;Did you run generatePaths()?&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        </div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pCost &lt; cost)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        {</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pCost;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            index = i;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        }</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    }</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;The optimal path is: &quot;</span> &lt;&lt;index &lt;&lt;endl;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[index].printPathInfo();</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    </div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">return</span> index;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_a68db1975c2fefa3845e0604af379bbf6"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">AOgraph::paths</a></div><div class="ttdeci">vector&lt; Path &gt; paths</div><div class="ttdoc">set of paths in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00092">aograph.h:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae4047aad30065aaf5ebdb04b5ee4565e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AOgraph::loadFromFile </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>fileName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>load the graph description from a file </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fileName</td><td>name of the file with the graph description </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00460">460</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d5/dc8/aonode_8cpp_source.xhtml#l00049">AOnode::addArc()</a>, and <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00052">Path::addNode()</a>.</p>
<div class="fragment"><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;{</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="comment">// raise an error if the graph is not empty</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size() != 0)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    {</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The graph is not empty.&quot;</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Do you really want to overwrite the current graph?&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    }            </div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    </div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    ifstream graphFile(fileName.c_str());</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    cout &lt;&lt;<span class="stringliteral">&quot;Loading graph description from file: &quot;</span> &lt;&lt;fileName &lt;&lt;endl;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    </div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keywordflow">while</span> (!graphFile.eof())</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="comment">// the first line contains:</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="comment">// 1. the name of the graph</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="comment">// 2. the number N=numNodes of nodes</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="comment">// 3. the name of the head node (corresponding to the final assembly)</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keywordtype">string</span> name;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <span class="keywordtype">int</span> numNodes;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keywordtype">string</span> headName;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        </div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        graphFile &gt;&gt;name &gt;&gt;numNodes &gt;&gt;headName;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">if</span> (!graphFile)</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">gName</a> = name;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        </div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="comment">// the next N lines contain the name and cost of all the nodes in the graph</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordtype">string</span> nameNode;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keywordtype">int</span> cost;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; numNodes; i++)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        {            </div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            graphFile &gt;&gt;nameNode &gt;&gt; cost;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">if</span> (!graphFile)</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <a class="code" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">addNode</a>(nameNode, cost);</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        }</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        </div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="comment">// the next ?? lines contain the descriptions of the hyperarcs in the graph</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">while</span> (!graphFile.eof())</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* father;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="keywordtype">string</span> nameFather;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <span class="keywordtype">int</span> numChildren;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordtype">int</span> hyperarcCost;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            vector&lt;AOnode*&gt; childNodes;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            </div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            graphFile &gt;&gt;numChildren &gt;&gt;nameFather &gt;&gt;hyperarcCost;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordflow">if</span> (!graphFile)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            father = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(nameFather);</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="comment">//DEBUG:cout&lt;&lt;&quot;nameFather = &quot; &lt;&lt;nameFather &lt;&lt;endl;</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            </div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            <span class="comment">// the next numChildren lines contain the names of the child nodes</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; numChildren; i++)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            {</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* temp;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                <span class="keywordtype">string</span> nameChild;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                graphFile &gt;&gt;nameChild;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                <span class="keywordflow">if</span> (!graphFile)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                temp = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(nameChild);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                childNodes.push_back(temp);</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            }</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            father-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a5eb4c92896c7c1309d8723882911c2fc">addArc</a>(childNodes, hyperarcCost);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="comment">// identify the head node in the graph</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a> = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(headName);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    }</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    graphFile.close();</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    </div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="comment">// set up the graph (nodes feasibility, paths costs)</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a87dafa2fe301e4f95a1ec66c6d7ba21a">setupGraph</a>();</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_a87dafa2fe301e4f95a1ec66c6d7ba21a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a87dafa2fe301e4f95a1ec66c6d7ba21a">AOgraph::setupGraph</a></div><div class="ttdeci">void setupGraph()</div><div class="ttdoc">set up a graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00288">aograph.cpp:288</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a8c5dd2d57022d5e0e5f12c90f2b81027"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">AOgraph::gName</a></div><div class="ttdeci">string gName</div><div class="ttdoc">name of the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00089">aograph.h:89</a></div></div>
<div class="ttc" id="classAOnode_xhtml"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml">AOnode</a></div><div class="ttdoc">class &quot;AOnode&quot; for the generic node element of an AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00040">aonode.h:40</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a8437faadc195ca2835e41c384777d061"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">AOgraph::findByName</a></div><div class="ttdeci">AOnode * findByName(string nameNode)</div><div class="ttdoc">find a node by name </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00124">aograph.cpp:124</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a5eb4c92896c7c1309d8723882911c2fc"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a5eb4c92896c7c1309d8723882911c2fc">AOnode::addArc</a></div><div class="ttdeci">void addArc(vector&lt; AOnode * &gt; nodes, int hyperarcCost)</div><div class="ttdoc">add an hyperarc to child nodes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00049">aonode.cpp:49</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a3b49c18c37014abdad084e1939fe2486"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">AOgraph::head</a></div><div class="ttdeci">AOnode * head</div><div class="ttdoc">pointer to the node = final assembly </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00091">aograph.h:91</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a1a15bd520a88dab17a2889577f0d8c6a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">AOgraph::graph</a></div><div class="ttdeci">vector&lt; AOnode &gt; graph</div><div class="ttdoc">set of nodes in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00090">aograph.h:90</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a032ca4643c87641235d59506090a53d1"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">AOgraph::addNode</a></div><div class="ttdeci">void addNode(string nameNode, int cost)</div><div class="ttdoc">add a node in the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00112">aograph.cpp:112</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac3de5a6fa4472fac8eafbd1ba637c8bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AOgraph::solveByName </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>nameNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>solve a node, finding it by name </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nameNode</td><td>name of the node </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00581">581</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d5/dc8/aonode_8cpp_source.xhtml#l00121">AOnode::setSolved()</a>.</p>
<div class="fragment"><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;{</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* solved = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(nameNode);</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordtype">bool</span> result = solved-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">setSolved</a>();</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">updateNodeFeasibility</a>();</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a520284be02c834241d32d9669598fba1">printGraphInfo</a>();</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    </div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="comment">// report that the graph has been solved if the solved node is the head node</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">nSolved</a> == <span class="keyword">true</span>)</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    {</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[REPORT] The graph is solved (head node solved).&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    </div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="comment">// update the path information (cost) of all paths</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>.clear();</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.clear();</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="keywordflow">if</span> (result == <span class="keyword">true</span>)</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">updatePaths</a>(*solved);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    cout&lt;&lt;endl &lt;&lt;<span class="stringliteral">&quot;Updated paths: &quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.size(); i++)</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;Path index: &quot;</span> &lt;&lt;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>[i] &lt;&lt;<span class="stringliteral">&quot; - Benefit: &quot;</span> &lt;&lt;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>[i] &lt;&lt;endl;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_a28bbee0711fbf8ad10d39e0b9e094155"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">AOgraph::pIndices</a></div><div class="ttdeci">vector&lt; int &gt; pIndices</div><div class="ttdoc">indices of the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00093">aograph.h:93</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a7f06eddccf019609014ed8bcfa4e3131"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">AOgraph::updatePaths</a></div><div class="ttdeci">void updatePaths(AOnode &amp;solved)</div><div class="ttdoc">update all paths (update path costs when a node is solved) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00371">aograph.cpp:371</a></div></div>
<div class="ttc" id="classAOnode_xhtml"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml">AOnode</a></div><div class="ttdoc">class &quot;AOnode&quot; for the generic node element of an AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00040">aonode.h:40</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a8437faadc195ca2835e41c384777d061"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">AOgraph::findByName</a></div><div class="ttdeci">AOnode * findByName(string nameNode)</div><div class="ttdoc">find a node by name </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00124">aograph.cpp:124</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a520284be02c834241d32d9669598fba1"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a520284be02c834241d32d9669598fba1">AOgraph::printGraphInfo</a></div><div class="ttdeci">void printGraphInfo()</div><div class="ttdoc">display graph information </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00537">aograph.cpp:537</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_aa5be6664955f2ae86ffe5b560aaac379"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">AOgraph::updateNodeFeasibility</a></div><div class="ttdeci">void updateNodeFeasibility()</div><div class="ttdoc">update the feasibility status of the nodes in the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00145">aograph.cpp:145</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a3b49c18c37014abdad084e1939fe2486"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">AOgraph::head</a></div><div class="ttdeci">AOnode * head</div><div class="ttdoc">pointer to the node = final assembly </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00091">aograph.h:91</a></div></div>
<div class="ttc" id="classAOnode_xhtml_acf10113d7e2bdb01ca67e6bcf43fabf3"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">AOnode::setSolved</a></div><div class="ttdeci">bool setSolved()</div><div class="ttdoc">set the node as solved </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00121">aonode.cpp:121</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a30bcb49edb592fa8c09846f8afff5c89"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">AOgraph::pUpdate</a></div><div class="ttdeci">vector&lt; int &gt; pUpdate</div><div class="ttdoc">costs subtracted to the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00094">aograph.h:94</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a7b3552a269be035589633969fc3982c9"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">AOnode::nSolved</a></div><div class="ttdeci">bool nSolved</div><div class="ttdoc">solved: the operation has been performed </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00045">aonode.h:45</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a577adb4ee85685e439922947709e83e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AOgraph::suggestNext </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>strategy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>suggest the node to solve </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">strategy</td><td>"0" = short-sighted, "1" = long-sighted </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00550">550</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00043">AOnode::nName</a>.</p>
<div class="fragment"><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;{</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="comment">// issue a warning if the graph has been solved already</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">nSolved</a> == <span class="keyword">true</span>)</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    {</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[WARNING] The graph is solved. No suggestion possible.&quot;</span> &lt;&lt;endl;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    }</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    </div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordtype">int</span> optimalPathIndex = 0;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        </div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="comment">// short-sighted strategy:</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="comment">// pick the path which received the highest benefit from the last action</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="keywordflow">if</span> (strategy == <span class="keyword">false</span>)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    {</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="comment">// find the path with highest benefit from last action</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=1; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.size(); i++)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>[i] &gt; <a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>[optimalPathIndex])</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                optimalPathIndex = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>[i];</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    }</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="comment">// long-sighted strategy:</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="comment">// pick the path which minimizes the cost to completion</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keywordflow">if</span> (strategy == <span class="keyword">true</span>)</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        optimalPathIndex = <a class="code" href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">findOptimalPath</a>();</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* suggestion = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[optimalPathIndex].suggestNode();</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;ENDOR suggestion: &quot;</span> &lt;&lt;suggestion-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a> &lt;&lt;endl;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_a28bbee0711fbf8ad10d39e0b9e094155"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">AOgraph::pIndices</a></div><div class="ttdeci">vector&lt; int &gt; pIndices</div><div class="ttdoc">indices of the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00093">aograph.h:93</a></div></div>
<div class="ttc" id="classAOnode_xhtml"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml">AOnode</a></div><div class="ttdoc">class &quot;AOnode&quot; for the generic node element of an AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00040">aonode.h:40</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a3b49c18c37014abdad084e1939fe2486"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">AOgraph::head</a></div><div class="ttdeci">AOnode * head</div><div class="ttdoc">pointer to the node = final assembly </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00091">aograph.h:91</a></div></div>
<div class="ttc" id="classAOnode_xhtml_af28c48c20f4bc2cdc0d297d87c8bbe53"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">AOnode::nName</a></div><div class="ttdeci">string nName</div><div class="ttdoc">name of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00043">aonode.h:43</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a30bcb49edb592fa8c09846f8afff5c89"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">AOgraph::pUpdate</a></div><div class="ttdeci">vector&lt; int &gt; pUpdate</div><div class="ttdoc">costs subtracted to the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00094">aograph.h:94</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_ad27f163e8b9ca4aeba1353ef1783d95a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">AOgraph::findOptimalPath</a></div><div class="ttdeci">int findOptimalPath()</div><div class="ttdoc">find the optimal path (long-sighted strategy) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00414">aograph.cpp:414</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a7b3552a269be035589633969fc3982c9"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">AOnode::nSolved</a></div><div class="ttdeci">bool nSolved</div><div class="ttdoc">solved: the operation has been performed </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00045">aonode.h:45</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a68db1975c2fefa3845e0604af379bbf6"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">AOgraph::paths</a></div><div class="ttdeci">vector&lt; Path &gt; paths</div><div class="ttdoc">set of paths in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00092">aograph.h:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7f06eddccf019609014ed8bcfa4e3131"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AOgraph::updatePaths </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;&#160;</td>
          <td class="paramname"><em>solved</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>update all paths (update path costs when a node is solved) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">solved</td><td>reference to the solved node (to use for paths costs update) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml#l00371">371</a> of file <a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00044">AOnode::nCost</a>, <a class="el" href="../../d2/d3a/aonode_8h_source.xhtml#l00043">AOnode::nName</a>, and <a class="el" href="../../de/df2/aograph_8h_source.xhtml#l00024">Path::pathNodes</a>.</p>
<div class="fragment"><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;{</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="comment">// update the path information (cost) of EACH path as:</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// toSubtract = solved.nCost + overall_update - path_i_update;</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="comment">// path[i].cost = path[i].cost - toSubtract;</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    </div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordtype">int</span> toSubtract = solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">nCost</a> + <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">computeOverallUpdate</a>(solved);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    </div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    {</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="comment">// find all paths which include the solved node and any of its parents</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes.size(); j++)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        {</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes[j]-&gt;nName == solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k=0; k&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes.size(); k++)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                    <span class="keywordtype">int</span> hIndex = <a class="code" href="../../db/dbf/classAOgraph.xhtml#abbea61dddb7e972e3b1c5add443df508">findHyperarc</a>(*<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes[k], solved);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                    </div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                    <span class="comment">// update the path costs of the paths to be updated</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                    <span class="keywordflow">if</span> (hIndex != -1)</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                    {</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                        <span class="comment">// compute &quot;path_i_update&quot;</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                        <span class="keywordtype">int</span> pathUpdate = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes[k]-&gt;arcs[hIndex].hCost;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                        <span class="keywordtype">int</span> thisSubtract = toSubtract - pathUpdate;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                        </div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                        <span class="comment">// update the cost of the path</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].updatePath(solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>, thisSubtract);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                        </div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        <span class="comment">// save the index &amp; subtracted cost of the updated path</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>.push_back(i);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.push_back(thisSubtract);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                        </div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                    }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                }</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        }</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;}</div><div class="ttc" id="classAOgraph_xhtml_a28bbee0711fbf8ad10d39e0b9e094155"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">AOgraph::pIndices</a></div><div class="ttdeci">vector&lt; int &gt; pIndices</div><div class="ttdoc">indices of the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00093">aograph.h:93</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_aa04f592cb029679028716e51249f38b2"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">AOgraph::computeOverallUpdate</a></div><div class="ttdeci">int computeOverallUpdate(AOnode &amp;node)</div><div class="ttdoc">compute the overall update cost (intermediate step to update the path cost) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00337">aograph.cpp:337</a></div></div>
<div class="ttc" id="classAOnode_xhtml_af28c48c20f4bc2cdc0d297d87c8bbe53"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">AOnode::nName</a></div><div class="ttdeci">string nName</div><div class="ttdoc">name of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00043">aonode.h:43</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a30bcb49edb592fa8c09846f8afff5c89"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">AOgraph::pUpdate</a></div><div class="ttdeci">vector&lt; int &gt; pUpdate</div><div class="ttdoc">costs subtracted to the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00094">aograph.h:94</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_abbea61dddb7e972e3b1c5add443df508"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#abbea61dddb7e972e3b1c5add443df508">AOgraph::findHyperarc</a></div><div class="ttdeci">int findHyperarc(AOnode &amp;parent, AOnode &amp;child)</div><div class="ttdoc">find the index of the hyperarc connecting a parent to a child node </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00310">aograph.cpp:310</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a5c0cc92fac735168be8111fae12af690"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">AOnode::nCost</a></div><div class="ttdeci">int nCost</div><div class="ttdoc">cost of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00044">aonode.h:44</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a68db1975c2fefa3845e0604af379bbf6"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">AOgraph::paths</a></div><div class="ttdeci">vector&lt; Path &gt; paths</div><div class="ttdoc">set of paths in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00092">aograph.h:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="../../de/df2/aograph_8h_source.xhtml">aograph.h</a></li>
<li><a class="el" href="../../df/d6d/aograph_8cpp_source.xhtml">aograph.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed May 18 2016 18:47:16 for endor by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
